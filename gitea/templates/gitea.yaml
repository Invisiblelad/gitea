{{- if .Values.statefulSet.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gitea.fullname" . }}
spec:
  serviceName: {{ include "gitea.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "gitea.fullname" . }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.persistence.volumeClaimName }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        volumeMode: Filesystem
  template:
    metadata:
      labels:
        app: {{ template "gitea.fullname" . }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.gitea.repository }}:{{ .Values.image.gitea.tag }}"
          imagePullPolicy: {{ .Values.image.gitea.pullPolicy }}
          ports:
            - containerPort: 3000
{{- if .Values.postgresql.enabled }}
          env:
            - name: DB_TYPE
              value: {{ .Values.gitea.dbType }}
            - name: DB_HOST
              value: {{ .Values.gitea.dbHost }}
            - name: DB_PORT
              value: "{{ .Values.gitea.dbPort }}"
            - name: DB_NAME
              value: {{ .Values.gitea.dbName }}
            - name: DB_USER
              value: {{ .Values.gitea.dbUser }}
            - name: DB_PASSWD
              value: {{ .Values.gitea.dbPassword | quote }}
            - name: AUTO_CREATE_TABLES
              value: "{{ .Values.gitea.autoCreateTables }}"
{{- end }}
          volumeMounts:
            - name: {{ .Values.volumeMounts.tmp.name }}
              mountPath: {{ .Values.volumeMounts.tmp.mountPath }}
              readOnly: false
            - name: {{ .Values.persistence.volumeClaimName }}
              mountPath: {{ .Values.volumeMounts.data.mountPath }}
              readOnly: false
          resources:
            requests:
              cpu: {{ .Values.resources.cpu }}
              memory: {{ .Values.resources.memory }}
      volumes:
        - name: {{ .Values.volumeMounts.tmp.name }}
          emptyDir:
            sizeLimit: {{ .Values.volumeMounts.tmp.sizeLimit }}
            medium: {{ .Values.volumeMounts.tmp.medium }}
{{- else }}
# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gitea.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "gitea.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "gitea.fullname" . }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.gitea.repository }}:{{ .Values.image.gitea.tag }}"
          imagePullPolicy: {{ .Values.image.gitea.pullPolicy }}
          ports:
            - containerPort: 3000
{{- if .Values.postgresql.enabled }}
          env:
            - name: DB_TYPE
              value: {{ .Values.gitea.dbType }}
            - name: DB_HOST
              value: {{ .Values.gitea.dbHost }}
            - name: DB_PORT
              value: "{{ .Values.gitea.dbPort }}"
            - name: DB_NAME
              value: {{ .Values.gitea.dbName }}
            - name: DB_USER
              value: {{ .Values.gitea.dbUser }}
            - name: DB_PASSWD
              value: {{ .Values.gitea.dbPassword | quote }}
            - name: AUTO_CREATE_TABLES
              value: "{{ .Values.gitea.autoCreateTables }}"
{{- end }}
          volumeMounts:
            - name: {{ .Values.volumeMounts.tmp.name }}
              mountPath: {{ .Values.volumeMounts.tmp.mountPath }}
              readOnly: false
          resources:
            requests:
              cpu: {{ .Values.resources.cpu }}
              memory: {{ .Values.resources.memory }}
      volumes:
        - name: {{ .Values.volumeMounts.tmp.name }}
          emptyDir:
            sizeLimit: {{ .Values.volumeMounts.tmp.sizeLimit }}
            medium: {{ .Values.volumeMounts.tmp.medium }}
{{- end }}


